@layout('master')

@section('map_clinics')

<style>
    body { margin: 0; padding: 0; }
    #mapClinics { position: absolute;  width: 85%; height: 100%; z-index: 1;}
    
    .mapboxgl-popup {
        max-width: 500px;
    }
</style>


<div id='mapClinics'></div>

<script>

mapboxgl.accessToken = 'pk.eyJ1Ijoic2lzdGVtYXNjZXJjYSIsImEiOiJjbDRldWE2ZjAwMjI3M2JwOHpsb21jbHpxIn0.jLF2ydLoAdgrv68l8iM2VQ';

let divMap=document.getElementById('mapClinics')


let map = new mapboxgl.Map({
    container: divMap,
    style: 'mapbox://styles/mapbox/streets-v11',
    center:[-110.143592,23.655148],
    zoom:8
});

map.addControl(new mapboxgl.NavigationControl());
map.addControl(new mapboxgl.GeolocateControl());
map.addControl(new mapboxgl.FullscreenControl());
map.addControl(new mapboxgl.ScaleControl());


fetch('/banner_clinic')
.then(response => {
    if (!response.ok) {
      throw new Error(`Error de red - Código de estado: ${response.status}`);
    }
    return response.json();
  })
  .then(data => {
    data.forEach(clinic => {

      let popup=new mapboxgl.Popup({ offset: 25 }).setMaxWidth('500')
      let coordinates=[clinic.longitude,clinic.latitude];
      popup.setHTML(clinic.html)


      new mapboxgl.Marker()
        .setLngLat(coordinates)
        .setPopup(popup) 
        .addTo(map);
    });
  })
  .catch(error => {
    console.error('Error en la petición de monitores:', error);
  });
</script>
@end