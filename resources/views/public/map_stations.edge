@layout('master')

@section('map_stations')

<style>
    body { 
        margin: 0; 
        padding: 0; 
    }
    #mapStations { 
        position: absolute;   
        margin-right: 220px; 
        width: calc(100% - 220px); 
        height: 100vh; 
    }
        
    
    .mapboxgl-popup {
        max-width: 200px;
        font-size: 12px;
    }
</style>


<div id='mapStations'></div>

<script>

mapboxgl.accessToken = 'pk.eyJ1Ijoic2lzdGVtYXNjZXJjYSIsImEiOiJjbDRldWE2ZjAwMjI3M2JwOHpsb21jbHpxIn0.jLF2ydLoAdgrv68l8iM2VQ';

let divMap=document.getElementById('mapStations')


let map = new mapboxgl.Map({
    container: divMap,
    style: 'mapbox://styles/mapbox/streets-v11',
    center:[-110.143592,23.655148],
    zoom:8
});

map.addControl(new mapboxgl.NavigationControl());
map.addControl(new mapboxgl.GeolocateControl());
map.addControl(new mapboxgl.FullscreenControl());
map.addControl(new mapboxgl.ScaleControl());



fetch('/banner_station')
.then(response => {
    if (!response.ok) {
      throw new Error(`Error de red - Código de estado: ${response.status}`);
    }
    return response.json();
})
.then(data => {
     
    data.map(station => {

      let popup=new mapboxgl.Popup({ offset: 25 }).setMaxWidth('200')
      let coordinates=[station.longitude,station.latitude];
      popup.setHTML(station.html)
      

      new mapboxgl.Marker()
        .setLngLat(coordinates)
        .setPopup(popup) 
        .addTo(map);
    });

})
.catch(error => {
    console.error('Error en la petición de monitores:', error);
});

</script>
@end